.composition{
    position: relative;

    @include respond(tab-port) {
        margin-top: 6rem;
    }

    &__photo{
        width: 55%;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .4);
        // border-radius: 2px;
        position: absolute;
        // we want one image to be on top of all the oters. therefore need a z-index. the number doesnt really matter. 
        z-index: 10;
        // for the animation effect:
        transition: all .2s;
        // to set the border of the image when hovered, 20px away from the image. 
        outline-offset: 1rem;

        @include respond(tab-port) {
            float: left;
            position: relative;
            width: 33.33333333%;
            box-shadow: 0 1.5rem 3rem rgba($color-black, .2);
        }

        &--p1{
            left: 0;
            top: -2rem;

            @include respond(tab-port)  {
                top: 0;
                transform: scale(1.2);
            }
        }

        &--p2{
            right: 0; 
            top: 2rem;

            @include respond(tab-port)  {
                top: -1rem;
                transform: scale(1.3);
                z-index: 100;
            }
        }

        &--p3{
            left: 20%;
            top: 10rem;

            @include respond(tab-port)  {
                top: 1rem;
                left: 0;
                transform: scale(1.1);
            }
        }

        &:hover{
            // to get a border around the image with some space between the image and the border. With ouline we can do something what we cannot with the border -> outline-offset. Define above. 
            outline: 1rem solid $color-primary; 
            transform: scale(1.1) translateY(-.5rem);
            // increase the shadow:
            box-shadow: 1rem 2.5rem 4rem rgba($color-black, .8);
            // this one has always the higher z-index and therefore it should always be on top. 
            z-index: 500;
            transition: all .4s;

            @include respond(phone-small) {
                outline: unset;
                overflow: hidden;
            }
        }

        &--p1:hover{
            @include respond(phone-small) {
                outline: unset;
                transform: scale(4.5) translateY(-4.5rem) translateX(2rem);
            }
        }

        &--p2:hover{
            @include respond(phone-small) {
                outline: unset;
                transform: scale(4.5) translateY(-4.5rem) translateX(0rem);
            }
        }

        &--p3:hover{
            @include respond(phone-small) {
                outline: unset;
                transform: scale(4.5) translateY(-4.7rem) translateX(-2rem);
            }
        }
    }
    // when we hover the composition, then select the composition photo which is not hovered and decrease these photos a bit: 
    &:hover &__photo:not(:hover){
        transform: scale(.95) translateY(-1rem);
    }
    //composition:hover composition__photo:not(:hover) {
    
}