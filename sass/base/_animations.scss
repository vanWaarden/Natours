
/* the only properties that are required for an animation to work are:
- transform:
- opacity:
- name of the animation (made with @keyframes)
- duration of the animation  */

/* Animate the h1: */

@keyframes moveInLeft{
    0%{
        /* first we want it to be invisible. so opacity 0. for the browser its best to only animate 2 properties. So here, opacity and transform. For these two properties the browser is optimized. But with transform we can do a whole lot so its anything that we need to make all these cool animations that you can imagine. */
        opacity: 0;
        /* slide van links van de uiteindelijke plek naar zn plek */
        transform: translateX(-10rem);
    }

    80%{
        /* right before the end it moves a bit more to the right before falling into final position. */
        transform: translateX(1rem);
    }

    100%{
        opacity: 1;
        /* de slide komt uit waar de tekst hoort te staan: */
        transform: translate(0);
    }
}

@keyframes moveInRight{
    0%{
        opacity: 0;
        /* slide van rechts van de uiteindelijke plek naar zn plek */
        transform: translateX(10rem);
    }
    80%{
        transform: translateX(-1rem);
    }
    100%{
        opacity: 1;
        /* de slide komt uit waar de tekst hoort te staan: */
        transform: translate(0);
    }
}

@keyframes moveInBottom{
    0%{
        opacity: 0;
        transform: translateY(3rem);
    }
    100%{
        opacity: 1;
        transform: translate(0);
    }
}

/* :link = pseudoclass. We use pseudoclasses to style elements on a special condition. The link is a special state of a selector when it is an anchor element so it functions as a link. So like when a user hovers an element, or when a checkbox is clicked or if we want to select a first-child etc. Its a very important concept. But there is also the visited state. so button visited. when the user has already clicked on the button once before and then sees the button again, thats the visited state. If we dont style the link. It will be blue at the beginning and once it is clicked it will be purple. We want the visited state to look exactly like the link state so we just put them together. visited = keyword. */